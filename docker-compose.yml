services:
  postgres_master:
    container_name: postgres_master
    image: postgres:14.5
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./data-slave:/var/lib/postgresql/data-slave
      - ./init-script/config/postgres.conf:/etc/postgresql/postgresql.conf
      - ./init-script/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init-script:/etc/postgresql/init-script
      - ./DDL.sql:/docker-entrypoint-initdb.d/DDL.sql
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: >
      postgres
      -c config_file=/etc/postgresql/init-script/config/postgresql.conf

  postgres_slave:
    container_name: postgres_slave
    image: postgres:14.5
    restart: always
    volumes:
      - ./data-slave:/var/lib/postgresql/data
      - ./init-script/config/postgres.conf:/etc/postgresql/postgresql.conf
      - ./init-script/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      
  postgres_dwh:
    container_name: postgres_dwh
    image: postgres:14.5
    restart: always
    volumes:
      - ./data-dwh:/var/lib/postgresql/data
      - ./init-dwh:/docker-entrypoint-initdb.d
      - ./init-dwh/config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init-dwh/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "127.0.0.1:5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  debezium:
    container_name: debezium
    image: debezium/connect:2.3
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter

  dmp_service:
    container_name: dmp_service
    build:
      context: ./dmp_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - kafka
      - postgres_dwh
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_GROUP_ID=dmp-service-group
      - DWH_HOST=postgres_dwh
      - DWH_PORT=5432
      - DWH_USER=postgres
      - DWH_PASSWORD=postgres
      - DWH_DB=postgres

  airflow_db:
    container_name: airflow_db
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - ./airflow/airflow_db_data/pgdata:/var/lib/postgresql/data

  airflow_init:
    container_name: airflow_init
    image: apache/airflow:2.7.1
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_db/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    depends_on:
      - airflow_db

  airflow_webserver:
    container_name: airflow_webserver
    image: apache/airflow:2.7.1
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_db/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      - airflow_db

  airflow_scheduler:
    container_name: airflow_scheduler
    image: apache/airflow:2.7.1
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_db/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: scheduler
    depends_on:
      - airflow_db

  metabase:
    container_name: metabase
    image: metabase/metabase:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: postgres
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: postgres
      MB_DB_HOST: postgres_dwh
    depends_on:
      - postgres_dwh

volumes:
  airflow_db_data: